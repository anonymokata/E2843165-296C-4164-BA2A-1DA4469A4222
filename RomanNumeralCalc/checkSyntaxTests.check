#include "checkSyntax.h"

#test is_I_X_C_test
	fail_unless(is_I_X_C('I') == 1, "is_I_X_C failed - output false for good input");
	fail_unless(is_I_X_C('X') == 1, "is_I_X_C failed - output false for good input");
	fail_unless(is_I_X_C('C') == 1, "is_I_X_C failed - output false for good input");
	fail_unless(is_I_X_C('i') == 0, "is_I_X_C failed - output true for bad input");
	fail_unless(is_I_X_C('M') == 0, "is_I_X_C failed - output true for bad input");

#test is_V_L_D_M_test
	fail_unless(is_V_L_D_M('V') == 1, "is_V_L_D_M failed - output false for good input");
	fail_unless(is_V_L_D_M('L') == 1, "is_V_L_D_M failed - output false for good input");
	fail_unless(is_V_L_D_M('D') == 1, "is_V_L_D_M failed - output false for good input");
	fail_unless(is_V_L_D_M('M') == 1, "is_V_L_D_M failed - output false for good input");
	fail_unless(is_V_L_D_M('v') == 0, "is_V_L_D_M failed - output true for bad input");
	fail_unless(is_V_L_D_M('l') == 0, "is_V_L_D_M failed - output true for bad input");
	fail_unless(is_V_L_D_M('_') == 0, "is_V_L_D_M failed - output true for bad input");

#test maxLetterCountTest
	fail_unless(maxLetterCount('I') == 3, "maxLetterCountFailes - output something other than 3 for I");
	fail_unless(maxLetterCount('X') == 3, "maxLetterCountFailes - output something other than 3 for X");
	fail_unless(maxLetterCount('C') == 3, "maxLetterCountFailes - output something other than 3 for C");
	fail_unless(maxLetterCount('M') == 3, "maxLetterCountFailes - output something other than 3 for M");
	fail_unless(maxLetterCount('V') == 1, "maxLetterCountFailes - output something other than 1 for V");
	fail_unless(maxLetterCount('L') == 1, "maxLetterCountFailes - output something other than 1 for L");
	fail_unless(maxLetterCount('D') == 1, "maxLetterCountFailes - output something other than 1 for D");
	
	